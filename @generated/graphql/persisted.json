{
  "ProductGalleryQuery": "query ProductGalleryQuery($first: Int!, $after: String!, $sort: StoreSort!, $term: String!, $selectedFacets: [IStoreSelectedFacet!]!) {\n  search(\n    first: $first\n    after: $after\n    sort: $sort\n    term: $term\n    selectedFacets: $selectedFacets\n  ) {\n    products {\n      pageInfo {\n        totalCount\n      }\n      edges {\n        node {\n          id: productID\n          slug\n          sku\n          brand {\n            brandName: name\n            name\n          }\n          name\n          gtin\n          releaseDate\n          isVariantOf {\n            name\n            productGroupID\n            additionalProperty {\n              propertyID\n              name\n              value\n              valueReference\n            }\n            hasVariant {\n              sku\n              name\n              description\n              offers {\n                lowPrice\n                offers {\n                  availability\n                  price\n                  listPrice\n                  seller {\n                    identifier\n                  }\n                }\n              }\n              additionalProperty {\n                propertyID\n                name\n                value\n                valueReference\n              }\n            }\n          }\n          additionalProperty {\n            propertyID\n            name\n            value\n            valueReference\n          }\n          image {\n            url\n            alternateName\n          }\n          offers {\n            lowPrice\n            offers {\n              availability\n              price\n              listPrice\n              quantity\n              seller {\n                identifier\n              }\n            }\n          }\n        }\n      }\n    }\n    facets {\n      ... on StoreFacetRange {\n        key\n        label\n        min {\n          selected\n          absolute\n        }\n        max {\n          selected\n          absolute\n        }\n        __typename\n      }\n      ... on StoreFacetBoolean {\n        key\n        label\n        values {\n          label\n          value\n          selected\n          quantity\n        }\n        __typename\n      }\n    }\n  }\n}\n",
  "NotFoundPageQuery": "query NotFoundPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "ServerErrorPageQuery": "query ServerErrorPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "CollectionPageQuery": "query CollectionPageQuery {\n  site {\n    siteMetadata {\n      titleTemplate\n      title\n      description\n      siteUrl\n    }\n  }\n  cmsHome {\n    sections {\n      name\n      data\n    }\n  }\n  allCmsPlp {\n    edges {\n      node {\n        sections {\n          name\n          data\n        }\n      }\n    }\n  }\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "ServerCollectionPageQuery": "query ServerCollectionPageQuery($slug: String!) {\n  collection(slug: $slug) {\n    seo {\n      title\n      description\n    }\n    breadcrumbList {\n      itemListElement {\n        item\n        name\n        position\n      }\n    }\n    meta {\n      selectedFacets {\n        key\n        value\n      }\n    }\n  }\n  cmsHome {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "ProductPageQuery": "query ProductPageQuery {\n  site {\n    siteMetadata {\n      title\n      description\n      titleTemplate\n      siteUrl\n    }\n  }\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "ServerProductPageQuery": "query ServerProductPageQuery($slug: String!) {\n  product(locator: [{key: \"slug\", value: $slug}]) {\n    id: productID\n    slug\n    releaseDate\n    seo {\n      title\n      description\n    }\n    brand {\n      name\n    }\n    isVariantOf {\n      name\n      productGroupID\n      additionalProperty {\n        propertyID\n        name\n        value\n        valueReference\n      }\n      hasVariant {\n        sku\n        name\n        description\n        offers {\n          lowPrice\n          offers {\n            availability\n            price\n            listPrice\n            seller {\n              identifier\n            }\n          }\n        }\n        additionalProperty {\n          propertyID\n          name\n          value\n          valueReference\n        }\n      }\n    }\n    additionalProperty {\n      propertyID\n      name\n      value\n      valueReference\n    }\n    sku\n    gtin\n    name\n    description\n    breadcrumbList {\n      itemListElement {\n        item\n        name\n        position\n      }\n    }\n    image {\n      url\n      alternateName\n    }\n    offers {\n      lowPrice\n      highPrice\n      priceCurrency\n      offers {\n        availability\n        price\n        listPrice\n        priceValidUntil\n        priceCurrency\n        itemCondition\n        seller {\n          identifier\n        }\n      }\n    }\n  }\n}\n",
  "AccountPageQuery": "query AccountPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "CheckoutPageQuery": "query CheckoutPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "CollectionDynamicPageQuery": "query CollectionDynamicPageQuery {\n  site {\n    siteMetadata {\n      title\n      description\n      titleTemplate\n      siteUrl\n    }\n  }\n  allDynamicCollections {\n    nodes {\n      slug\n      title\n      idCollection\n    }\n  }\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "HomePageQuery": "query HomePageQuery {\n  site {\n    siteMetadata {\n      title\n      description\n      titleTemplate\n      siteUrl\n    }\n  }\n  allCmsHome {\n    edges {\n      node {\n        sections {\n          name\n          data\n        }\n      }\n    }\n  }\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "LifeLoverPageQuery": "query LifeLoverPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "LoginPageQuery": "query LoginPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "LandingPageQuery": "query LandingPageQuery {\n  site {\n    siteMetadata {\n      titleTemplate\n      title\n      description\n      siteUrl\n    }\n  }\n  cmsHome {\n    sections {\n      name\n      data\n    }\n  }\n  allCmsInstitutionalPage {\n    edges {\n      node {\n        name\n        sections {\n          data\n          name\n        }\n        seo {\n          siteMetadataWithSlug {\n            slug\n            description\n            title\n            titleTemplate\n          }\n        }\n        config {\n          slugAndFilterConfig {\n            slug\n            sort\n            filterGroup {\n              allItems {\n                key\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "StoresPageQuery": "query StoresPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "SatisfactionSurvey": "query SatisfactionSurvey {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "ProdutoPageQuery": "query ProdutoPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "SearchPageQuery": "query SearchPageQuery {\n  site {\n    siteMetadata {\n      titleTemplate\n      title\n      description\n    }\n  }\n  cmsHome {\n    sections {\n      name\n      data\n    }\n  }\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "SizeGuidePageQuery": "query SizeGuidePageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "MeasuresPageQuery": "query MeasuresPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "WishlistPageQuery": "query WishlistPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "WishlistListPageQuery": "query WishlistListPageQuery {\n  cmsGlobalComponents {\n    sections {\n      name\n      data\n    }\n  }\n}\n",
  "ValidateCartMutation": "mutation ValidateCartMutation($cart: IStoreCart!, $session: IStoreSession!) {\n  validateCart(cart: $cart, session: $session) {\n    order {\n      orderNumber\n      acceptedOffer {\n        seller {\n          identifier\n        }\n        quantity\n        price\n        listPrice\n        itemOffered {\n          sku\n          name\n          image {\n            url\n            alternateName\n          }\n          brand {\n            name\n          }\n          isVariantOf {\n            productGroupID\n            name\n          }\n          gtin\n          additionalProperty {\n            propertyID\n            name\n            value\n            valueReference\n          }\n        }\n      }\n    }\n    messages {\n      text\n      status\n    }\n  }\n}\n",
  "BrowserProductQuery": "query BrowserProductQuery($locator: [IStoreSelectedFacet!]!) {\n  product(locator: $locator) {\n    id: productID\n    sku\n    releaseDate\n    name\n    gtin\n    description\n    slug\n    isVariantOf {\n      name\n      productGroupID\n      additionalProperty {\n        propertyID\n        name\n        value\n        valueReference\n      }\n      hasVariant {\n        sku\n        name\n        description\n        offers {\n          lowPrice\n          offers {\n            availability\n            price\n            listPrice\n            seller {\n              identifier\n            }\n          }\n        }\n        additionalProperty {\n          propertyID\n          name\n          value\n          valueReference\n        }\n      }\n    }\n    additionalProperty {\n      propertyID\n      name\n      value\n      valueReference\n    }\n    image {\n      url\n      alternateName\n    }\n    brand {\n      name\n    }\n    offers {\n      lowPrice\n      offers {\n        availability\n        price\n        listPrice\n        seller {\n          identifier\n        }\n      }\n    }\n    breadcrumbList {\n      itemListElement {\n        item\n        name\n        position\n      }\n    }\n  }\n}\n",
  "ProductsQuery": "query ProductsQuery($first: Int!, $after: String, $sort: StoreSort!, $term: String!, $selectedFacets: [IStoreSelectedFacet!]!) {\n  search(\n    first: $first\n    after: $after\n    sort: $sort\n    term: $term\n    selectedFacets: $selectedFacets\n  ) {\n    products {\n      pageInfo {\n        totalCount\n      }\n      edges {\n        node {\n          id: productID\n          slug\n          sku\n          brand {\n            brandName: name\n            name\n          }\n          name\n          releaseDate\n          gtin\n          isVariantOf {\n            name\n            productGroupID\n            additionalProperty {\n              propertyID\n              name\n              value\n              valueReference\n            }\n            hasVariant {\n              sku\n              name\n              description\n              offers {\n                lowPrice\n                offers {\n                  availability\n                  price\n                  listPrice\n                  seller {\n                    identifier\n                  }\n                }\n              }\n              additionalProperty {\n                propertyID\n                name\n                value\n                valueReference\n              }\n            }\n          }\n          additionalProperty {\n            propertyID\n            name\n            value\n            valueReference\n          }\n          image {\n            url\n            alternateName\n          }\n          offers {\n            lowPrice\n            offers {\n              availability\n              price\n              listPrice\n              quantity\n              seller {\n                identifier\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
  "ValidateSession": "mutation ValidateSession($session: IStoreSession!, $search: String!) {\n  validateSession(session: $session, search: $search) {\n    locale\n    channel\n    country\n    postalCode\n    currency {\n      code\n      symbol\n    }\n    person {\n      id\n      email\n      givenName\n      familyName\n    }\n  }\n}\n"
}
